// Clase Punto
class Punto {
    private int x, y;

    public Punto(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public int getX() {
        return x;
    }

    public int getY() {
        return y;
    }

    public void mover(int nuevoX, int nuevoY) {
        this.x = nuevoX;
        this.y = nuevoY;
    }

    public double distancia(Punto otro) {
        int dx = this.x - otro.x;
        int dy = this.y - otro.y;
        return Math.sqrt(dx * dx + dy * dy);
    }

    @Override
    public String toString() {
        return "(" + x + ", " + y + ")";
    }
}

// Clase Forma
abstract class Forma {
    private String color;
    private Punto centro;

    public Forma(String color, Punto centro) {
        this.color = color;
        this.centro = centro;
    }

    public Punto getCentro() {
        return centro;
    }

    public void mover(int x, int y) {
        centro.mover(x, y);
    }

    public abstract double calcularArea();
    public abstract double calcularPerimetro();
}

// Clase Rectangulo
class Rectangulo extends Forma {
    private double ancho;
    private double alto;

    public Rectangulo(String color, Punto centro, double ancho, double alto) {
        super(color, centro);
        this.ancho = ancho;
        this.alto = alto;
    }

    @Override
    public double calcularArea() {
        return ancho * alto;
    }

    @Override
    public double calcularPerimetro() {
        return 2 * (ancho + alto);
    }
}

// Clase Circulo
class Circulo extends Forma {
    private double radio;

    public Circulo(String color, Punto centro, double radio) {
        super(color, centro);
        this.radio = radio;
    }

    @Override
    public double calcularArea() {
        return Math.PI * radio * radio;
    }

    @Override
    public double calcularPerimetro() {
        return 2 * Math.PI * radio;
    }
}

// Programa Principal
public class Main {
    public static void main(String[] args) {
        Forma rectangulo = new Rectangulo("Rojo", new Punto(5, 5), 4, 6);
        Forma circulo = new Circulo("Azul", new Punto(1, 1), 3);

        Forma[] formas = {rectangulo, circulo};

        for (Forma forma : formas) {
            System.out.println("Área: " + forma.calcularArea());
            System.out.println("Perímetro: " + forma.calcularPerimetro());
            Punto posicionInicial = new Punto(forma.getCentro().getX(), forma.getCentro().getY());
            forma.mover(10, 10);
            double distanciaRecorrida = posicionInicial.distancia(forma.getCentro());
            System.out.println("Nueva posición: " + forma.getCentro());
            System.out.println("Distancia recorrida: " + distanciaRecorrida);
        }
    }
}
